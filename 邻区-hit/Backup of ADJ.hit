/////////////////////////////////////
//生成相邻小区
//2013-1-18
//
////////////////////////////////////

# include "ADJ.h"
string item[];
integer sel[];
phase ADJ
step prepare
integer file_mode=APPEND;
	 device("OMC");//caoyan1~1234Abcd~ 
	 send( "neman.sh\r\n");  
	 setlogin("OMC","NOKIAB","NSN*123456");
	    
	 h_excel = ddeconnect("Excel","基站割接.xlsm");			
	 logset("New_Btslog.txt", APPEND);
    
    if (messagebox("清空原指令文件?",MB_YESNOCANCEL)==YES) file_mode=NEW; 
    else stop();
    endif
    
    adj_file = fileopen("Adj_Create.MML",file_mode);
    inadj_file = fileopen("IncomingAdj_modify.MML",file_mode);
    adj3G_file = fileopen("Adj3G_Create.MML",file_mode);
    adjTD_file = fileopen("AdjTD_Create.MML",file_mode);
    
    if (h_excel == 0) 
    messagebox("链接EXCEL失败,请先打开PLAN!"); 
    abort("Cannot connect to Excel"); 
    stop(); 
    endif  
    
item[1]="Create OUTgoing Adj MML"; item[2]=" Modify Incoming Adj MML";
askselection(item,sel,2,RADIO,SINGLE,"Please select work type"); 
if (sel[1])
goto ADJ,sendexcelcomannd;
endif
if (sel[2])
goto ADJ,Readtable;
endif

abort(0, "stop the macro");
//abort(1, "End it all");
endstep


step sendexcelcomannd 
 
 if (messagebox("OUTgoing Adj  MML will be Create, continue ? ",MB_YESNO)==NO)
     //stop();
   //  goto ADJ,Readtable;
    
   
  endif      
 readtotable();
    cur_row=2;
    bsc_s=cells(cur_row,OLDBSC);
    bcf_s=cells(cur_row,OLDBCF);
    bts_s=cells(cur_row,OLDBTS);	   	 
   while (cur_row<total_row)
      celllist[cur_row-1]=cells(cur_row,OLDCI);
      laclist[cur_row-1]=cells(cur_row,OLDLAC);
      obtslist[cur_row-1]=cells(cur_row,OLDBTS);    
      cur_row++;
   endwhile
 
    
	// ddedisconnect(h_excel);
    
cur_row=2; 
while (cells_ex(cur_row,1) <>"") 
           
	  if(cells_ex(cur_row,1)<>cells_ex(cur_row-1,1))
	      
	      print("ZZZ;\r\n");          
	     print("%s\n",cells_ex(cur_row,1));      
	     send("ZZZ;\r\n");         
	     send("%s\r\n",cells_ex(cur_row,1));     
	  fileprint(adj_file,"STOP//%s \n",cells_ex(cur_row,NEWBSC));
	   endif  
	  
	  //inttostr

	  
	  //if(cells_ex(cur_row,OLDSEG)<>cells_ex(cur_row-1,OLDSEG))
	  if(cells_ex(cur_row,OLDSEG)+cells_ex(cur_row,OLDBSC)<>cells_ex(cur_row-1,OLDSEG)+cells_ex(cur_row-1,OLDBSC))
	   fileprint(adj_file,"//%s BCF-%s SEG-%s\n",cells_ex(cur_row,NEWBSC),cells_ex(cur_row,NEWBCF),cells_ex(cur_row,NEWSEG));              
    fileprint(adj3G_file,"//%s BCF-%s SEG-%s\n",cells_ex(cur_row,NEWBSC),cells_ex(cur_row,NEWBCF),cells_ex(cur_row,NEWSEG)); 
    fileprint(adjTD_file,"//%s BCF-%s SEG-%s\n",cells_ex(cur_row,NEWBSC),cells_ex(cur_row,NEWBCF),cells_ex(cur_row,NEWSEG));
     
     print("ZEAO:SEG=%s;\n",cells_ex(cur_row,OLDSEG));
     tx("ZEAO:SEG=%s;",cells_ex(cur_row,OLDSEG));  
     CreateADJ();  
    
    //  联通3G
    print("ZEAI:SEG=%s;\n",cells_ex(cur_row,OLDSEG));  
    tx("ZEAI:SEG=%s;",cells_ex(cur_row,OLDSEG));
     Create_3GADJ();    
    
 /*   //////移动TD
    print("ZEAL:SEG=%s;\n",cells_ex(cur_row,OLDSEG));  
     tx("ZEAL:SEG=%s;",cells_ex(cur_row,OLDSEG));
     Create_TDADJ();   */
     endif 
	  cur_row++;                      
endwhile
messagebox("  outging邻区生成完毕,请打开:\n    Adj_Create.MML\n    AdjTD_Create.MML");                 
//stop();
endstep




//下面是建incoming邻区

step Readtable
	//read excel to array///	
	//stop();  
	readtotable();
	ddedisconnect(h_excel);
endstep


step Actual

if (messagebox("Incoming Adj Modify MML will be Create, continue ? ",MB_YESNO)==NO)
     //stop();
     goto ADJ,Over;
  endif            


	// if( messagebox("取Logfile生成MML Command ?", MB_YESNOCANCEL) <> YES ) stop(); endif ;
    cur_row=2;
    bsc_s=cells(cur_row,OLDBSC);
    bcf_s=cells(cur_row,OLDBCF);
    bts_s=cells(cur_row,OLDBTS);	   	 
   while (cur_row<total_row)
      celllist[cur_row-1]=cells(cur_row,OLDCI);
      laclist[cur_row-1]=cells(cur_row,OLDLAC);
      obtslist[cur_row-1]=cells(cur_row,OLDBTS);    
      cur_row++;
   endwhile
  // stop(); 
endstep




step com
if (messagebox("Incoming Adj Modify MML will be Create, continue ? ",MB_YESNO)==NO)
     //stop();
     goto ADJ,Over;
  endif  

endstep


step Incoming_adj   // 这里定义涉及到的BSC，involvedbsc数组定义与割接站有邻区关系的BSC

integer k,m,i_flag;


string involved_bsc[]={"FUZBSC07G","FUZBSC08G","FUZBSC09G","FUZBSC10G","FUZBSC11G",
                       "FUZBSC12G","FUZBSC13G","FUZBSC14G","FUZBSC15G","FUZBSC16G",
                       "FUZBSC17G","FUZBSC18G","FUZBSC19G","FUZBSC20G","FUZBSC21G",
                       "FUZBSC22G","FUZBSC23G","FUZBSC24G","FUZBSC25G","FUZBSC26G",
                       "FUZBSC27G","FUZBSC28G","FUZBSC29G","FUZBSC30G","FUZBSC32G",
                       "FUZBSC33G","FUZBSC34G"};      
/* 
 string involved_bsc[]={"JANBSC06G","JANBSC07G","JANBSC08G", 
                       "JANBSC09G","JANBSC10G","JANBSC11G","JANBSC12G","JANBSC13G", 
                       "JANBSC14G","JANBSC15G","JANBSC16G","JANBSC17G","JANBSC18G", 
                       "JANBSC19G","JANBSC20G","JANBSC21G","JANBSC22G","JANBSC23G", 
                       "JANBSC24G","JANBSC25G","JANBSC26G","JANBSC27G","JANBSC28G", 
                       "JANBSC29G","JANBSC30G"};   */
                       
//    string involved_bsc[]={"XTBSC12","XTBSC14","XTBSC15","XTBSC16","XTBSC17","XTBSC18"}; 

               
  //string involved_bsc[]={"SQBSC46"};
       
 /*                    
string involved_bsc[]={"GZHBSC10G","GZHBSC11G","GZHBSC12G","GZHBSC13G","GZHBSC14G","GZHBSC15G",
                       "GZHBSC16G","GZHBSC17G","GZHBSC19G","GZHBSC20G","GZHBSC21G","GZHBSC22G",
                       "GZHBSC23G","GZHBSC24G","GZHBSC25G","GZHBSC26G","GZHBSC27G","GZHBSC29G",
                       "GZHBSC31G","GZHBSC32G","GZHBSC33G","GZHBSC35G","GZHBSC36G","GZHBSC37G",
                       "GZHBSC38G","GZHBSC39G","GZHBSC40G","GZHBSC41G","GZHBSC42G","GZHBSC43G",
                       "GZHBSC48G","GZHBSC49G","GZHBSC50G","GZHBSC51G","GZHBSC54G","GZHBSC55G",
                       "GZHBSC57G","GZHBSC63G","GZHBSC64G","GZHBSC65G","GZHBSC66G","GZHBSC67G",
                       "GZHBSC68G","GZHBSC86G","GZHBSC88G","GZHBSC89G"};      */                    


//string involved_bsc[]={"GZHBSC54G","GZHBSC86G","GZHBSC89G"};


                                                           
/*if (messagebox("Incoming Adj Modify MML will be Create, continue ? ",MB_YESNO)==NO)
     //stop();
     goto ADJ,Over;
  endif       */       
    	  for (cur_row=1;cur_row<=arraysize(involved_bsc);cur_row++) 
		     print("ZZZ;\n");
		     print("%s\n",involved_bsc[cur_row]);
		     send("ZZZ;\r\n");
		     send("%s\r\n",involved_bsc[cur_row]);  //SWITH BSC
			  fileprint(inadj_file,"STOP();");
		     //stop();
		     fileprint(inadj_file,"//Incoming adj modify in %s\n",involved_bsc[cur_row]);

		     
		     for(k=1;k<=arraysize(laclist);k++)  //K 代表的是相邻小区所在的行-1
		       if (ifsegexist(cells(k+1,OLDBSC),cells(k+1,OLDSEG), k+1)<=0)
			         tx("ZEAO:::LAC=%s,CI=%s;",laclist[k],celllist[k]);
				         while(getline(line,"'HAS ADJACENT CELL :'"))
				             temp_buff=inttostr(strtoint(strtrim(mymid(line,5,4),1|2),DEC),DEC);
				             if (involved_bsc[cur_row]<>cells(k+1,OLDBSC))
				                 i_flag=0;
				             else
						             for(m=1,i_flag=0;m<=arraysize(obtslist);m++)
						                 if(obtslist[m]==temp_buff)
						                           /////////一定要用m做遍历
						                     if (involved_bsc[cur_row]==cells(m+1,OLDBSC))
						                       i_flag=1;
						                       break;
						                     endif
						                 endif
						             endfor
					           endif
				             fileprint(inadj_file,"%sZEAM:SEG=%s::LAC=%s,CI=%s:NEWLAC=%s,NEWCI=%s:AGENA=Y;\n"
				                       ,myif(i_flag,"//","")  
				                       ,temp_buff
				                       ,laclist[k],celllist[k]
				                       ,cells(k+1,NEWLAC),cells(k+1,NEWCI));
				                       //生成的指令当中带 "//"的表示是割接站之间的邻区，无需执行。
			             endwhile
		           endif
		     endfor
	    endfor

endstep


step Over 
 
// fileclose(adj_file);
 fileclose(inadj_file);

 //ddedisconnect(h_excel);
 logclose();
 messagebox("project finished!");
endstep

endphase
                                                             
                                                                          










